# In all environments, the following files are loaded if they exist,
# the latter taking precedence over the former:
#
#  * .env                contains default values for the environment variables needed by the app
#  * .env.local          uncommitted file with local overrides
#  * .env.$APP_ENV       committed environment-specific defaults
#  * .env.$APP_ENV.local uncommitted environment-specific overrides
#
# Real environment variables win over .env files.
#
# DO NOT DEFINE PRODUCTION SECRETS IN THIS FILE NOR IN ANY OTHER COMMITTED FILES.
#
# Run "composer dump-env prod" to compile .env files for production use (requires symfony/flex >=1.2).
# https://symfony.com/doc/current/best_practices.html#use-environment-variables-for-infrastructure-configuration



APP_NAME=banner

###> symfony/framework-bundle ###
APP_ENV=dev
APP_SECRET=74dcf8734ee5a2635bab50abc47d73cd
###< symfony/framework-bundle ###

### > HTTP Port and domainName ###
HTTPD_PORT=8070
HTTPD_DOMAIN=${APP_NAME}.localhost
### < HTTP Port and domainName ###

###> Application and Database Info (LocalHost Cred) ###
MYSQL_DATABASE=${APP_NAME}_devdb
MYSQL_HOST=${APP_NAME}-db
MYSQL_PORT=33030
MYSQL_VERSION=8.0
MYSQL_ROOT_PASSWORD=
MYSQL_ROOT_USER=root
MYSQL_ALLOW_EMPTY_PASSWORD="true"

# Check Docker Compose File for deprecation
#MYSQL_USER=root
#MYSQL_PASSWORD=
###< Application and Database Info ###

###> Application and Database Info (Azure MYSQL Creds) ###
#MYSQL_DATABASE=${APP_NAME}_devdb
#MYSQL_HOST=bannerapp.mysql.database.azure.com
#MYSQL_USER=sudo@bannerapp
#MYSQL_PASSWORD=
#MYSQL_PORT=3306
###< Application and Database Info ###

###> doctrine/doctrine-bundle ###

# See Port Because we are using Docker mysql instance Now it should connect to that Port
DATABASE_URL="mysql://${MYSQL_ROOT_USER}:${MYSQL_ROOT_PASSWORD}@${MYSQL_HOST}:3306/${MYSQL_DATABASE}?serverVersion=8.0"
###< doctrine/doctrine-bundle ###
